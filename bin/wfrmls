#!/usr/bin/env ruby
$: << File.dirname(__FILE__)+'/../lib'

CONFIG_FILE_NAME = File.expand_path('~/wfrmls_config.yml')

require 'configliere'
require 'watir'
require 'watir/ie'
require 'wfrmls/ie'

Settings.use :define, :commandline, :commands

Settings.define_command :comp,      description: "Find comparisons for ADDRESS."
Settings.define_command :overview,  description: "Show overview for ADDRESS."
Settings.define_command :details,   description: "Show details for ADDRESS."

Settings.define :output, description: "Store details in FILE.",
  flag: :o, type: String, default: "last.yml"
Settings.define :input, description: "Use details from FILE.",
  flag: :i, type: String, default: "last.yml"

Settings.read CONFIG_FILE_NAME

Settings.resolve!

# TODO save username and password into config file if new or not their

username = Settings[:username]
password = Settings[:password]
address = Settings.rest.join(' ')

Watir::Browser.default = 'ie'
ie = Watir::Browser.new


auth = username && password ?
  Wfrmls::AutomaticAuthenticator.new(ie, username, password) :
  Wfrmls::ManualAuthenticator.new(ie)

mls = Wfrmls::IE.new(ie, auth)

if address.empty?
  begin
    mls.lookup_address(nil)
  rescue
    exit
  end
end

addr = StreetAddress::US.parse(address)
if addr.nil?
  addr = StreetAddress::US.parse(address+', UT')
end

puts addr

if Settings.command_name == :overview
  mls.lookup_opposition(addr)
else
  details = mls.collect_property_details(addr)
  puts details.to_yaml
  if Settings.command_name == :comp
    mls.comp(addr, details) unless details.empty?
  else
    mls.lookup_address(addr)
  end
end
